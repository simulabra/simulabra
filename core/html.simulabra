~class.new({
  :name :html-element
  :desc "base class for DOM elements"
  :components (
    ~var.new({
      :name :id
    })
    ~method.new({
      :name :dom-node
      :do [^$js(document).getElementById(.id)]
    })
    ~method.new({
      :name :load
      :do [.children.map([%it.load])]
    })
    ~method.new({
      :name :render
      :do [
        $set(.dom-node :innerHTML .html)
        .load
      ]
    })
    ~method.new({
      :name :children
      :do [^()]
    })
    ~method.new({
      :name :html
    })
  )
})

$(def (~class new {
  name 'list-element
  implements [!HTML]
  super ~element
  slots {
    list (~var default [])
    html $(method [] `<div id="${.(id)}">${.(list | map $(do %it(html)) | join )}</div>`)
  }
}))

$(def (~class new {
  name 'div
  implements [!HTML]
  super ~element
}))

(~div of "hello, world!")
