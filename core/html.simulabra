~class.new{
  :name :html-element
  :desc "base class for DOM elements"
  :components (
    ~var.new{
      :name :id
    }
    ~method.new{
      :name :dom-node
      :do [^@context.document.getElementById(.id)]
    }
    ~method.new{
      :name :load
      :do [_ .children.map([%_.load])]
    }
    ~method.new{
      :name :render
      :do [
        $set(.dom-node :innerHTML .html)
        .load
      ]
    }
    ~var.new{
      :name :children
      :default [()]
    }
    ~method.new{
      :name :html
    }
  )
}

~class.new{
  :name :div
  :components (
    ~html-element
  )
}

$(def (~class new {
  name 'list-element
  implements [!HTML]
  super ~element
  slots {
    list (~var default [])
    html $(method [] `<div id="${.(id)}">${.(list | map $(do %it(html)) | join )}</div>`)
  }
})

$(def (~class new {
  name 'div
  implements [!HTML]
  super ~element
})

(~div of "hello, world!")
