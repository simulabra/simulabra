(~class new {
  name :element
  desc "base class for DOM elements"
  components [
    (~method new {
      name :text
      do ($ do (. new { inner %it }))
    })
    (~var new)
    node (~var new)
    load $(method [] $(loop .(children) %it(load .)))
    nameString $(method [] .(name | toString))
    domNode $(method [] @document(getElementById .(id))
    render $(method []
      .(domNode | set 'innerHTML .(html))
      .(load)
    )
    children $(method [] [])
  ]
}))

$(def (~interface new {
  name 'HTML
  slots {
    html (~message new)
  }
}))

$(def (~class new {
  name 'list-element
  implements [!HTML]
  super ~element
  slots {
    list (~var default [])
    html $(method [] `<div id="${.(id)}">${.(list | map $(do %it(html)) | join )}</div>`)
  }
}))

$(def (~class new {
  name 'div
  implements [!HTML]
  super ~element
}))

(~div of "hello, world!")
