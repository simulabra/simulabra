!import=(:base :lang :test :html)
!js-import=(:http)
$.js("import fetch from 'node-fetch'")

~class{
  :name=:js-wrap
  :components=(
    ~var{
      :name=:inner
      :foreign=~true
    }
  )
}

~class{
  :name=:url
  :components=(
    ~js-wrap
    ~static{
      :name=:from-string
      :do=[|%url-string|
        ^.new{
          :inner=@.js-new(:URL %url-string)
        }
      ]
    }
    ~method{
      :name=:href
      :do=[^@.js-get(.inner :href)]
    }
  )
}

~class{
  :name=:request-handler
  :components=(
    ~var{:name=:server}
    ~var{:name=:path}
    ~var{:name=:do}
    ~after{
      :name=:init
      :do=[.server.add-handler(.me)]
    }
    ~method{
      :name=:handle
      :do=[|%req %res| .do(%req %res)]
    }
  )
}

~class{
  :name=:http-request
  :components=(
    ~var{:name=:verb}
    ~var{:name=:url}
    ~method{
      :name=:fetch
      :do=[
        .log($.js(:fetch))
        ^$.js("axios").request{
          :url=.url.href
          :method=.verb
        }
      ]
    }
  )
}

~class{
  :name=:http-server
  :components=(
    ~js-wrap
    ~var{
      :name=:handlers
      :default=()
    }
    ~method{
      :name=:add-handler
      :do=[|%handler| .handlers.push(%handler)]
    }
    ~method{
      :name=:path-handler
      :do=[|%path|
        ^.handlers.find([_ ^_.path.eq(%path)])
      ]
    }
    ~method{
      :name=:create-server
      :do=[|%fn|
        ^.inner($.js(:http).createServer(%fn))
      ]
    }
    ~method{
      :name=:start
      :do=[|%port|
        .create-server([|%req %res|
          %path-handler=.path-handler(%req.url)
          %path-handler.if-null(
            [%res.end("404 Not Found")]
            [%path-handler.handle(%req %res)]
          )
        ]).listen(%port)
      ]
    }
  )
}

~async-case{
  :name=:basic-http-path-handlers
  :do=&[
    %server=~http-server.new
    %handler=~request-handler{
      :name=:test-handler
      :server=%server
      :path="/"
      :do=[|%req %res|
        %res.writeHead(200 {:Content-Type="text/html"})
        %res.end("<!DOCTYPE html><html><body><h1>Hello, World!</h1></body></html>")
      ]
    }
    .assert-eq(%handler.name %server.path-handler("/").name)
    %server.start(8080)
    .log("server started")
    &~http-request{:verb=:get :url=~url.from-string("http://localhost:8080")}.fetch
  ]
}
