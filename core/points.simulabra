$(def ~class(new {
  name :point
  desc "2d point"
  slots {
    x ~var(new { default 0 })
    y ~var(new { default 0 })
    dist ~method(new {
      desc "cartesian distance to other point"
      do $(fn [other]
        ^.(x | sub %other(x) | pow 2 | add .(y | sub %other(y) | pow 2) | sqrt)
      )
    })
  }
}))

$(def ~class(new {
  name :color
  slots {
    color ~var(new)
  }
}))

$(def ~class(new {
  name :color-point
  components [~point ~color]
}))

$(defn test []
  $(let p ~point(new))
  $(let q ~color-point(new { color :blue }))
  %p(x 3)
  %q(y 4)
  ~botherer(new | ps "SAYS:" | announce %q(color) %p(dist %q))
)


$(def ~class(new {
  name :botherer
  slots {
    ps ~var(default "~")
    announce ~method(new {
      desc "HEAR YE HEAR YE"
      do $(fn [@args] %args(map $(do ~debug(log .(ps) %it))))
    })
  }
}))
